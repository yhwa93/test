"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[470],{"./src/stories/SelectBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Focused:()=>Focused,SelectBoxSetValue:()=>SelectBoxSetValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.mjs"),_SelectBox__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/SelectBox.tsx"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.A)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import type { Meta, StoryObj } from '@storybook/react'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport { SelectBox } from './SelectBox'\n\nconst meta: Meta<typeof SelectBox> = {\n  title: 'Atoms/SelectBox',\n  component: SelectBox,\n  decorators: [\n    (Story) => (\n      <FormProvider {...useForm()}>\n        <Story />\n      </FormProvider>\n    ),\n  ],\n  tags: ['autodocs'],\n}\n\nexport default meta\ntype Story = StoryObj<typeof SelectBox>\n\nexport const Default: Story = {\n  args: {\n    name: 'gender',\n    options: ['남자', '여자'],\n    placeholder: '성별을 선택하세요.',\n  },\n  parameters: {\n    componentSubtitle: '기본 select box입니다. useForm의 register 메소드를 props로 넘기면 useForm 라이브러리를 사용할 수 있습니다.',\n    layout: 'centered',\n    backgrounds: {\n      default: 'green',\n      values: [\n        { name: 'green', value: '#ECF5E8' },\n        { name: 'blue', value: '#1A344C' },\n        { name: 'yellow', value: '#FFF8EB' },\n        { name: 'modal', value: 'rgba(0, 0, 0, 0.70)' },\n      ],\n    },\n    docs: {\n      description: {\n        story: 'value 선택전, select box입니다.',\n      },\n      story: { inline: true },\n      canvas: { sourceState: 'shown' },\n    },\n  },\n}\n\nexport const SelectBoxSetValue: Story = {\n  args: {\n    ...Default.args,\n    selectedOption: '여자',\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'value 선택 후, select box입니다.',\n      },\n      story: { inline: true },\n      canvas: { sourceState: 'shown' },\n    },\n  },\n}\n\nexport const Focused: Story = {\n  args: {\n    ...Default.args,\n    autoFocus: true,\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'focus된 상태의 select box입니다. (autoFocus props를 이용하여 자동 포커스)',\n      },\n      story: { inline: true },\n      canvas: { sourceState: 'shown' },\n    },\n  },\n}\n\nexport const Disabled: Story = {\n  args: {\n    ...Default.args,\n    selectedOption: '여자',\n    disabled: true,\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'value가 선택된 상태에서 disabled된 select box입니다.',\n      },\n      story: { inline: true },\n      canvas: { sourceState: 'shown' },\n    },\n  },\n}\n",locationsMap:{default:{startLoc:{col:30,line:21},endLoc:{col:1,line:47},startBody:{col:30,line:21},endBody:{col:1,line:47}},"select-box-set-value":{startLoc:{col:40,line:49},endLoc:{col:1,line:64},startBody:{col:40,line:49},endBody:{col:1,line:64}},focused:{startLoc:{col:30,line:66},endLoc:{col:1,line:81},startBody:{col:30,line:66},endBody:{col:1,line:81}},disabled:{startLoc:{col:31,line:83},endLoc:{col:1,line:99},startBody:{col:31,line:83},endBody:{col:1,line:99}}}}},title:"Atoms/SelectBox",component:_SelectBox__WEBPACK_IMPORTED_MODULE_2__.a,decorators:[function(Story){return __jsx(react_hook_form__WEBPACK_IMPORTED_MODULE_3__.Op,(0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.mN)(),__jsx(Story,null))}],tags:["autodocs"]};var Default={args:{name:"gender",options:["남자","여자"],placeholder:"성별을 선택하세요."},parameters:{componentSubtitle:"기본 select box입니다. useForm의 register 메소드를 props로 넘기면 useForm 라이브러리를 사용할 수 있습니다.",layout:"centered",backgrounds:{default:"green",values:[{name:"green",value:"#ECF5E8"},{name:"blue",value:"#1A344C"},{name:"yellow",value:"#FFF8EB"},{name:"modal",value:"rgba(0, 0, 0, 0.70)"}]},docs:{description:{story:"value 선택전, select box입니다."},story:{inline:!0},canvas:{sourceState:"shown"}}}},SelectBoxSetValue={args:_objectSpread(_objectSpread({},Default.args),{},{selectedOption:"여자"}),parameters:_objectSpread(_objectSpread({},Default.parameters),{},{docs:{description:{story:"value 선택 후, select box입니다."},story:{inline:!0},canvas:{sourceState:"shown"}}})},Focused={args:_objectSpread(_objectSpread({},Default.args),{},{autoFocus:!0}),parameters:_objectSpread(_objectSpread({},Default.parameters),{},{docs:{description:{story:"focus된 상태의 select box입니다. (autoFocus props를 이용하여 자동 포커스)"},story:{inline:!0},canvas:{sourceState:"shown"}}})},Disabled={args:_objectSpread(_objectSpread({},Default.args),{},{selectedOption:"여자",disabled:!0}),parameters:_objectSpread(_objectSpread({},Default.parameters),{},{docs:{description:{story:"value가 선택된 상태에서 disabled된 select box입니다."},story:{inline:!0},canvas:{sourceState:"shown"}}})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'gender',\n    options: ['남자', '여자'],\n    placeholder: '성별을 선택하세요.'\n  },\n  parameters: {\n    componentSubtitle: '기본 select box입니다. useForm의 register 메소드를 props로 넘기면 useForm 라이브러리를 사용할 수 있습니다.',\n    layout: 'centered',\n    backgrounds: {\n      default: 'green',\n      values: [{\n        name: 'green',\n        value: '#ECF5E8'\n      }, {\n        name: 'blue',\n        value: '#1A344C'\n      }, {\n        name: 'yellow',\n        value: '#FFF8EB'\n      }, {\n        name: 'modal',\n        value: 'rgba(0, 0, 0, 0.70)'\n      }]\n    },\n    docs: {\n      description: {\n        story: 'value 선택전, select box입니다.'\n      },\n      story: {\n        inline: true\n      },\n      canvas: {\n        sourceState: 'shown'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},SelectBoxSetValue.parameters={...SelectBoxSetValue.parameters,docs:{...SelectBoxSetValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    selectedOption: '여자'\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'value 선택 후, select box입니다.'\n      },\n      story: {\n        inline: true\n      },\n      canvas: {\n        sourceState: 'shown'\n      }\n    }\n  }\n}",...SelectBoxSetValue.parameters?.docs?.source}}},Focused.parameters={...Focused.parameters,docs:{...Focused.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    autoFocus: true\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'focus된 상태의 select box입니다. (autoFocus props를 이용하여 자동 포커스)'\n      },\n      story: {\n        inline: true\n      },\n      canvas: {\n        sourceState: 'shown'\n      }\n    }\n  }\n}",...Focused.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    selectedOption: '여자',\n    disabled: true\n  },\n  parameters: {\n    ...Default.parameters,\n    docs: {\n      description: {\n        story: 'value가 선택된 상태에서 disabled된 select box입니다.'\n      },\n      story: {\n        inline: true\n      },\n      canvas: {\n        sourceState: 'shown'\n      }\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","SelectBoxSetValue","Focused","Disabled"]},"./src/stories/SelectBox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>SelectBox});var _templateObject,_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_excluded=["options","selectedOption","validationtext","autoFocus","disabled"],__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement,SelectBoxWrapper=styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay.div(_templateObject||(_templateObject=(0,_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_2__.A)(["\n  & > select:focus {\n    border: 2px solid blue;\n  }\n\n  & > select {\n    border: ",";\n  }\n"])),(function(props){return props.$validationError?"2px solid red!important":"1px solid gray"})),SelectBox=function SelectBox(_ref){var _ref$options=_ref.options,options=void 0===_ref$options?[]:_ref$options,_ref$selectedOption=_ref.selectedOption,selectedOption=void 0===_ref$selectedOption?void 0:_ref$selectedOption,_ref$validationtext=_ref.validationtext,validationtext=void 0===_ref$validationtext?void 0:_ref$validationtext,_ref$autoFocus=_ref.autoFocus,autoFocus=void 0!==_ref$autoFocus&&_ref$autoFocus,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,props=(0,_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_3__.A)(_ref,_excluded);return __jsx(SelectBoxWrapper,{$validationError:Boolean(validationtext)},__jsx("select",(0,_Users_younhwalee_Documents_code_test_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_4__.A)({},props.register,{ref:props.selectRef,id:props.name,name:props.name,defaultValue:selectedOption,autoFocus,disabled,onFocus:function onFocus(){return props.setOnFocus(!0)},onBlur:function onBlur(){return props.setOnFocus(!1)}}),props.placeholder&&__jsx("option",{value:""},props.placeholder),options.map((function(opt,index){return __jsx("option",{key:index,value:opt},opt)}))))};SelectBox.displayName="SelectBox";try{SelectBox.displayName="SelectBox",SelectBox.__docgenInfo={description:"",displayName:"SelectBox",props:{register:{defaultValue:null,description:"[useForm 사용시] register 메소드",name:"register",required:!1,type:{name:"object"}},selectRef:{defaultValue:null,description:"[useForm 사용시] select의 ref(DOM 객체)",name:"selectRef",required:!1,type:{name:"ForwardedRef<any>"}},name:{defaultValue:null,description:"select 태그의 attribute name값으로 select의 id, useForm의 name 또한 동일한 값으로 설정됩니다.",name:"name",required:!0,type:{name:"string"}},options:{defaultValue:{value:"[]"},description:"options 배열",name:"options",required:!1,type:{name:"string[]"}},selectedOption:{defaultValue:{value:"undefined"},description:"선택된 option",name:"selectedOption",required:!1,type:{name:"string"}},validationtext:{defaultValue:{value:"undefined"},description:"[useForm 사용시] selectbox의 유효성 여부",name:"validationtext",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"placeholder로 사용할 option 텍스트 (제일 처음에 나오는 option(value=''))",name:"placeholder",required:!0,type:{name:"string"}},autoFocus:{defaultValue:{value:"false"},description:"자동 포커스 기능 사용 여부",name:"autoFocus",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"disabled 상태의 여부",name:"disabled",required:!1,type:{name:"boolean"}},setOnFocus:{defaultValue:null,description:"Focus되면 Label 노출 여부",name:"setOnFocus",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/SelectBox.tsx#SelectBox"]={docgenInfo:SelectBox.__docgenInfo,name:"SelectBox",path:"src/stories/SelectBox.tsx#SelectBox"})}catch(__react_docgen_typescript_loader_error){}}}]);